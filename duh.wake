publish path = "/scratch/albertc/nvm/versions/node/v11.4.0/bin"

def npmInstall _ =
  def cmdline = which "npm", "install", Nil
  def inputs =
    "{here}/package.json", (map (files _ '.*') ("{here}/lib", "{here}/bin", "{here}/assets", Nil)).flatten
  def foutputs _ = Nil
  cached_manual_job here "" environment cmdline inputs foutputs

def duh = if (npmInstall 0).status == 0 then "bin/duh.js" else raise "npm install failed!"

def npmValidate json =
  def relJson = relative here json
  def cmdline = which "node", duh, "validate", "-i", relJson, Nil
  def inputs = json, Nil
  def foutputs _ = Nil
  cached_manual_job here "" environment cmdline inputs foutputs

global def duhGenerate json outputDir =
  def relJson = relative here json
  def relOutputDir = relative here outputDir
  def cmdline =
    which "node", duh, "generate", "-i", relJson, "-d", relOutputDir, Nil
  def inputs = json, Nil
  def foutputs _ = files outputDir '.*'
  if (npmValidate json).status == 0
  then
    (cached_manual_job here "" environment cmdline inputs foutputs).outputs
  else
    raise "Validate failed for {json}!"
