def npmInstall _ =
  def cmdline = which "npm", "install", Nil
  def inputs =
    "{here}/package.json", (map (files _ '.*') ("{here}/lib", "{here}/bin", "{here}/assets", Nil)).flatten
  def foutputs _ = Nil
  cached_manual_job here "" environment cmdline inputs foutputs

def duh_export_scala_js = "{here}/bin/duh-export-scala.js"
def duh_js = "{here}/bin/duh.js"

def npmValidate json =
  def duh = if (npmInstall 0).status == 0 then duh_js else raise "npm install failed!"
  def cmdline = which "node", duh, "validate", json, Nil
  def inputs = json, Nil
  def foutputs _ = Nil
  manual_job cmdline inputs foutputs

global def duhGenerate json rawOutputDir =
  def outputDir = mkdir 0x1fd rawOutputDir
  def duh_scala = if (npmInstall 0).status == 0 then duh_export_scala_js else raise "npm install failed!"
  def relJson = relative outputDir json
  def cmdline = which "node", relative outputDir duh_scala, relJson, Nil
  def inputs = json, Nil
  def foutputs _ = files outputDir "component/.*"
  if (npmValidate json).status == 0
  then
    (cached_manual_job outputDir "" environment cmdline inputs foutputs).outputs
  else
    raise "Validate failed for {json}!"
